name: Docker build and push
on:
  workflow_call:
    inputs:
      dockerfile: 
        description: 'Dockerfile path.'
        required: false
        default: './Dockerfile'
        type: string
      context:
        description: 'Build context.'
        required: false
        default: '.'
        type: string
      arguments:
        description: 'Build arguments. List of key-value pairs.'
        required: false
        default: ''
        type: string
      semver:
        description: 'Semantic version. Leave empty to not use semantic versioning.'
        required: false
        default: ''
        type: string
      tags:
        description: 'List of tags to apply to the image. Required if you do not use semantic versioning.'
        required: false
        default: |
          type=raw,value=${{ github.sha }}
        type: string
      registry:
        description: 'Registry for docker image to use. Defaults to GitHub container registry.'
        required: false
        default: ghcr.io
        type: string
      image_name:
        description: 'Docker image name to use. Defaults to repository name.'
        required: false
        default: ${{ github.repository }}
        type: string
      registry_username:
        description: 'Username to use for registry login. Defaults to Github actor.'
        required: false
        type: string
      registry_token:
        description: 'Token to use for registry login. Defaults to GITHUB_TOKEN.'
        required: false
        type: string
      fetch_submodules:
        description: 'Fetch submodules. Defaults to true.'
        required: false
        default: true
        type: boolean
      platforms:
        description: 'Platforms to build for (comma separated, e.g., linux/amd64,linux/arm64).'
        required: false
        default: linux/amd64
        type: string
      runner:
        description: 'Runner to use for the job. Defaults to ubuntu-latest.'
        required: false
        default: ubuntu-latest
        type: string
      cacheFrom:
        description: 'Cache type from'
        required: false
        type: string
        default: type=gha
      cacheTo:
        description: 'Cache type to'
        required: false
        type: string
        default: type=gha,mode=max
      commit:
        description: 'Commit SHA to use for git operations and tagging. Defaults to github.sha.'
        required: false
        default: ${{ github.sha }}
        type: string

jobs:
  build:
    name: Release
    runs-on: ${{ inputs.runner }}
    permissions: 
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.commit }}

      - name: Ensure submodules are fetched
        if: ${{ inputs.fetch_submodules == true }}
        run: git submodule update --init --recursive

        # Docker tagging based on semantic versioning or provided data
      - name: Docker meta based on SemVer
        id: meta-semver
        if: ${{ inputs.semver != '' }}
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.registry }}/${{ inputs.image_name }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ inputs.commit }}
            type=raw,value=${{ inputs.semver }}
            type=semver,pattern={{major}},value=${{ inputs.semver }}
            type=semver,pattern={{major}}.{{minor}},value=${{ inputs.semver }}
            type=semver,pattern={{version}},value=${{ inputs.semver }}

        # Docker tagging based on provided data
      - name: Docker meta based on provided data
        id: meta-custom
        if: ${{ inputs.semver == '' }}
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.registry }}/${{ inputs.image_name }}
          tags: ${{ inputs.tags }}

        # Set up Docker for build and push
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ inputs.registry_username || github.actor }}
          password: ${{ inputs.registry_token || secrets.GITHUB_TOKEN }}

        # Build and push the image
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          file: ${{ inputs.dockerfile }}
          context: ${{ inputs.context }}
          push: true
          build-args: ${{ inputs.arguments }}
          tags: ${{ steps.meta-semver.outputs.tags || steps.meta-custom.outputs.tags }}
          labels: ${{ steps.meta-semver.outputs.labels || steps.meta-custom.outputs.labels }}
          cache-from: ${{ inputs.cacheFrom }}
          cache-to: ${{ inputs.cacheTo }}
          platforms: ${{ inputs.platforms }}
